// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/stanc.proto

#ifndef PROTOBUF_proto_2fstanc_2eproto__INCLUDED
#define PROTOBUF_proto_2fstanc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace stan {
namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_proto_2fstanc_2eproto();
void protobuf_AssignDesc_proto_2fstanc_2eproto();
void protobuf_ShutdownFile_proto_2fstanc_2eproto();

class StanCompileRequest;
class StanCompileResponse;

enum StanCompileResponse_State {
  StanCompileResponse_State_UNKNOWN = 0,
  StanCompileResponse_State_INCOMPLETE = 1,
  StanCompileResponse_State_SUCCESS = 2,
  StanCompileResponse_State_WARN = 3,
  StanCompileResponse_State_ERROR = 4,
  StanCompileResponse_State_StanCompileResponse_State_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StanCompileResponse_State_StanCompileResponse_State_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StanCompileResponse_State_IsValid(int value);
const StanCompileResponse_State StanCompileResponse_State_State_MIN = StanCompileResponse_State_UNKNOWN;
const StanCompileResponse_State StanCompileResponse_State_State_MAX = StanCompileResponse_State_ERROR;
const int StanCompileResponse_State_State_ARRAYSIZE = StanCompileResponse_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* StanCompileResponse_State_descriptor();
inline const ::std::string& StanCompileResponse_State_Name(StanCompileResponse_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    StanCompileResponse_State_descriptor(), value);
}
inline bool StanCompileResponse_State_Parse(
    const ::std::string& name, StanCompileResponse_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StanCompileResponse_State>(
    StanCompileResponse_State_descriptor(), name, value);
}
// ===================================================================

class StanCompileRequest : public ::google::protobuf::Message {
 public:
  StanCompileRequest();
  virtual ~StanCompileRequest();

  StanCompileRequest(const StanCompileRequest& from);

  inline StanCompileRequest& operator=(const StanCompileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StanCompileRequest& default_instance();

  void Swap(StanCompileRequest* other);

  // implements Message ----------------------------------------------

  inline StanCompileRequest* New() const { return New(NULL); }

  StanCompileRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StanCompileRequest& from);
  void MergeFrom(const StanCompileRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StanCompileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string model_name = 1;
  void clear_model_name();
  static const int kModelNameFieldNumber = 1;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // optional string model_code = 2;
  void clear_model_code();
  static const int kModelCodeFieldNumber = 2;
  const ::std::string& model_code() const;
  void set_model_code(const ::std::string& value);
  void set_model_code(const char* value);
  void set_model_code(const char* value, size_t size);
  ::std::string* mutable_model_code();
  ::std::string* release_model_code();
  void set_allocated_model_code(::std::string* model_code);

  // optional string model_file_name = 3;
  void clear_model_file_name();
  static const int kModelFileNameFieldNumber = 3;
  const ::std::string& model_file_name() const;
  void set_model_file_name(const ::std::string& value);
  void set_model_file_name(const char* value);
  void set_model_file_name(const char* value, size_t size);
  ::std::string* mutable_model_file_name();
  ::std::string* release_model_file_name();
  void set_allocated_model_file_name(::std::string* model_file_name);

  // @@protoc_insertion_point(class_scope:stan.proto.StanCompileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::internal::ArenaStringPtr model_code_;
  ::google::protobuf::internal::ArenaStringPtr model_file_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fstanc_2eproto();
  friend void protobuf_AssignDesc_proto_2fstanc_2eproto();
  friend void protobuf_ShutdownFile_proto_2fstanc_2eproto();

  void InitAsDefaultInstance();
  static StanCompileRequest* default_instance_;
};
// -------------------------------------------------------------------

class StanCompileResponse : public ::google::protobuf::Message {
 public:
  StanCompileResponse();
  virtual ~StanCompileResponse();

  StanCompileResponse(const StanCompileResponse& from);

  inline StanCompileResponse& operator=(const StanCompileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StanCompileResponse& default_instance();

  void Swap(StanCompileResponse* other);

  // implements Message ----------------------------------------------

  inline StanCompileResponse* New() const { return New(NULL); }

  StanCompileResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StanCompileResponse& from);
  void MergeFrom(const StanCompileResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StanCompileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef StanCompileResponse_State State;
  static const State UNKNOWN = StanCompileResponse_State_UNKNOWN;
  static const State INCOMPLETE = StanCompileResponse_State_INCOMPLETE;
  static const State SUCCESS = StanCompileResponse_State_SUCCESS;
  static const State WARN = StanCompileResponse_State_WARN;
  static const State ERROR = StanCompileResponse_State_ERROR;
  static inline bool State_IsValid(int value) {
    return StanCompileResponse_State_IsValid(value);
  }
  static const State State_MIN =
    StanCompileResponse_State_State_MIN;
  static const State State_MAX =
    StanCompileResponse_State_State_MAX;
  static const int State_ARRAYSIZE =
    StanCompileResponse_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return StanCompileResponse_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return StanCompileResponse_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return StanCompileResponse_State_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .stan.proto.StanCompileResponse.State state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::stan::proto::StanCompileResponse_State state() const;
  void set_state(::stan::proto::StanCompileResponse_State value);

  // optional string cpp_code = 3;
  void clear_cpp_code();
  static const int kCppCodeFieldNumber = 3;
  const ::std::string& cpp_code() const;
  void set_cpp_code(const ::std::string& value);
  void set_cpp_code(const char* value);
  void set_cpp_code(const char* value, size_t size);
  ::std::string* mutable_cpp_code();
  ::std::string* release_cpp_code();
  void set_allocated_cpp_code(::std::string* cpp_code);

  // optional string messages = 4;
  void clear_messages();
  static const int kMessagesFieldNumber = 4;
  const ::std::string& messages() const;
  void set_messages(const ::std::string& value);
  void set_messages(const char* value);
  void set_messages(const char* value, size_t size);
  ::std::string* mutable_messages();
  ::std::string* release_messages();
  void set_allocated_messages(::std::string* messages);

  // @@protoc_insertion_point(class_scope:stan.proto.StanCompileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr cpp_code_;
  ::google::protobuf::internal::ArenaStringPtr messages_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_proto_2fstanc_2eproto();
  friend void protobuf_AssignDesc_proto_2fstanc_2eproto();
  friend void protobuf_ShutdownFile_proto_2fstanc_2eproto();

  void InitAsDefaultInstance();
  static StanCompileResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StanCompileRequest

// optional string model_name = 1;
inline void StanCompileRequest::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StanCompileRequest::model_name() const {
  // @@protoc_insertion_point(field_get:stan.proto.StanCompileRequest.model_name)
  return model_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileRequest::set_model_name(const ::std::string& value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stan.proto.StanCompileRequest.model_name)
}
inline void StanCompileRequest::set_model_name(const char* value) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stan.proto.StanCompileRequest.model_name)
}
inline void StanCompileRequest::set_model_name(const char* value, size_t size) {
  
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stan.proto.StanCompileRequest.model_name)
}
inline ::std::string* StanCompileRequest::mutable_model_name() {
  
  // @@protoc_insertion_point(field_mutable:stan.proto.StanCompileRequest.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StanCompileRequest::release_model_name() {
  
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileRequest::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    
  } else {
    
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:stan.proto.StanCompileRequest.model_name)
}

// optional string model_code = 2;
inline void StanCompileRequest::clear_model_code() {
  model_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StanCompileRequest::model_code() const {
  // @@protoc_insertion_point(field_get:stan.proto.StanCompileRequest.model_code)
  return model_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileRequest::set_model_code(const ::std::string& value) {
  
  model_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stan.proto.StanCompileRequest.model_code)
}
inline void StanCompileRequest::set_model_code(const char* value) {
  
  model_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stan.proto.StanCompileRequest.model_code)
}
inline void StanCompileRequest::set_model_code(const char* value, size_t size) {
  
  model_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stan.proto.StanCompileRequest.model_code)
}
inline ::std::string* StanCompileRequest::mutable_model_code() {
  
  // @@protoc_insertion_point(field_mutable:stan.proto.StanCompileRequest.model_code)
  return model_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StanCompileRequest::release_model_code() {
  
  return model_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileRequest::set_allocated_model_code(::std::string* model_code) {
  if (model_code != NULL) {
    
  } else {
    
  }
  model_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_code);
  // @@protoc_insertion_point(field_set_allocated:stan.proto.StanCompileRequest.model_code)
}

// optional string model_file_name = 3;
inline void StanCompileRequest::clear_model_file_name() {
  model_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StanCompileRequest::model_file_name() const {
  // @@protoc_insertion_point(field_get:stan.proto.StanCompileRequest.model_file_name)
  return model_file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileRequest::set_model_file_name(const ::std::string& value) {
  
  model_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stan.proto.StanCompileRequest.model_file_name)
}
inline void StanCompileRequest::set_model_file_name(const char* value) {
  
  model_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stan.proto.StanCompileRequest.model_file_name)
}
inline void StanCompileRequest::set_model_file_name(const char* value, size_t size) {
  
  model_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stan.proto.StanCompileRequest.model_file_name)
}
inline ::std::string* StanCompileRequest::mutable_model_file_name() {
  
  // @@protoc_insertion_point(field_mutable:stan.proto.StanCompileRequest.model_file_name)
  return model_file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StanCompileRequest::release_model_file_name() {
  
  return model_file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileRequest::set_allocated_model_file_name(::std::string* model_file_name) {
  if (model_file_name != NULL) {
    
  } else {
    
  }
  model_file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_file_name);
  // @@protoc_insertion_point(field_set_allocated:stan.proto.StanCompileRequest.model_file_name)
}

// -------------------------------------------------------------------

// StanCompileResponse

// optional .stan.proto.StanCompileResponse.State state = 2;
inline void StanCompileResponse::clear_state() {
  state_ = 0;
}
inline ::stan::proto::StanCompileResponse_State StanCompileResponse::state() const {
  // @@protoc_insertion_point(field_get:stan.proto.StanCompileResponse.state)
  return static_cast< ::stan::proto::StanCompileResponse_State >(state_);
}
inline void StanCompileResponse::set_state(::stan::proto::StanCompileResponse_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:stan.proto.StanCompileResponse.state)
}

// optional string cpp_code = 3;
inline void StanCompileResponse::clear_cpp_code() {
  cpp_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StanCompileResponse::cpp_code() const {
  // @@protoc_insertion_point(field_get:stan.proto.StanCompileResponse.cpp_code)
  return cpp_code_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileResponse::set_cpp_code(const ::std::string& value) {
  
  cpp_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stan.proto.StanCompileResponse.cpp_code)
}
inline void StanCompileResponse::set_cpp_code(const char* value) {
  
  cpp_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stan.proto.StanCompileResponse.cpp_code)
}
inline void StanCompileResponse::set_cpp_code(const char* value, size_t size) {
  
  cpp_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stan.proto.StanCompileResponse.cpp_code)
}
inline ::std::string* StanCompileResponse::mutable_cpp_code() {
  
  // @@protoc_insertion_point(field_mutable:stan.proto.StanCompileResponse.cpp_code)
  return cpp_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StanCompileResponse::release_cpp_code() {
  
  return cpp_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileResponse::set_allocated_cpp_code(::std::string* cpp_code) {
  if (cpp_code != NULL) {
    
  } else {
    
  }
  cpp_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpp_code);
  // @@protoc_insertion_point(field_set_allocated:stan.proto.StanCompileResponse.cpp_code)
}

// optional string messages = 4;
inline void StanCompileResponse::clear_messages() {
  messages_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& StanCompileResponse::messages() const {
  // @@protoc_insertion_point(field_get:stan.proto.StanCompileResponse.messages)
  return messages_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileResponse::set_messages(const ::std::string& value) {
  
  messages_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:stan.proto.StanCompileResponse.messages)
}
inline void StanCompileResponse::set_messages(const char* value) {
  
  messages_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:stan.proto.StanCompileResponse.messages)
}
inline void StanCompileResponse::set_messages(const char* value, size_t size) {
  
  messages_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:stan.proto.StanCompileResponse.messages)
}
inline ::std::string* StanCompileResponse::mutable_messages() {
  
  // @@protoc_insertion_point(field_mutable:stan.proto.StanCompileResponse.messages)
  return messages_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StanCompileResponse::release_messages() {
  
  return messages_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StanCompileResponse::set_allocated_messages(::std::string* messages) {
  if (messages != NULL) {
    
  } else {
    
  }
  messages_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), messages);
  // @@protoc_insertion_point(field_set_allocated:stan.proto.StanCompileResponse.messages)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace stan

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::stan::proto::StanCompileResponse_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::stan::proto::StanCompileResponse_State>() {
  return ::stan::proto::StanCompileResponse_State_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2fstanc_2eproto__INCLUDED
